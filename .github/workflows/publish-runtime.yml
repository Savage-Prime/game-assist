name: publish-runtime
on:
    push:
        branches: [main]

permissions:
    contents: write

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with: { fetch-depth: 0 }
            - uses: actions/setup-node@v4
              with: { node-version: 20, cache: "npm" }

            # Install dev deps to build TS â†’ JS
            - run: npm ci
            - run: npm run build

            # Stage only what prod needs
            - name: Prepare runtime payload
              run: |
                  rm -rf publish
                  mkdir -p publish
                  # required for prod install + lockfile integrity
                  cp package.json publish/
                  cp package-lock.json publish/ || true
                  # compiled JS
                  cp -r bin publish/
                  # include any assets your bot loads at runtime (if any)
                  # cp -r assets publish/  # <- example

                  # (optional) strip devDependencies in the published package.json
                  node -e "const fs=require('fs');const p=require('./publish/package.json');delete p.devDependencies;fs.writeFileSync('./publish/package.json', JSON.stringify(p,null,2));"

            - name: Ensure not in detached HEAD
              run: |
                  # If we're in detached HEAD, checkout main to get a branch context
                  if [ "$(git symbolic-ref --short HEAD || echo detached)" = "detached" ]; then
                    git checkout main
                  fi

            # Commit to runtime branch
            - name: Publish to runtime branch
              run: |
                  set -euo pipefail
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

                  # Store current commit for the commit message
                  CURRENT_COMMIT="${GITHUB_SHA}"

                  # Move publish directory out of the way temporarily
                  mv publish ../publish-temp

                  # Check if runtime branch exists
                  git fetch origin runtime || true
                  if git show-ref --verify --quiet refs/remotes/origin/runtime; then
                    echo "Runtime branch exists"
                    # Switch to runtime branch
                    git checkout -B runtime origin/runtime
                  else
                    echo "Creating new runtime branch"
                    # Create new orphan branch
                    git checkout --orphan runtime
                    git rm -rf .
                  fi

                  # Copy the build output to current directory
                  cp -r ../publish-temp/* .

                  # Ensure node_modules is not included in runtime branch
                  rm -rf node_modules

                  # Add and commit changes
                  git add -A

                  # Check if there are actually changes to commit
                  if git diff --cached --quiet; then
                    echo "No changes to commit"
                  else
                    echo "Creating new runtime commit"
                    git commit -m "runtime: build from ${CURRENT_COMMIT}"
                    # Push to runtime branch
                    git push origin runtime
                    echo "Successfully pushed runtime build"
                  fi

                  # Cleanup temporary directory
                  rm -rf ../publish-temp
                  echo "Cleaned up temporary files"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
